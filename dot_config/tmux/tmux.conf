# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Turn on true color
# set -g default-terminal "screen-256color"
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",*256col*:Tc"

# Start pane index on 1
#
# 0 is so far from 1. Lets start index by 1 instead.
set -g base-index 1
# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on
set-option -g renumber-windows on
# Increase history limit
#
# When tailing long logs or similar it is annoying not to be able to scroll
# back to see important things. Increase the limit to a high enough value.
set -g history-limit 10000
# Use VI key bindings
set -g status-keys vi
setw -g mode-keys vi
# Use mouse mode
set -g mouse on
set-option -s set-clipboard on
# Sane scrolling
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.tmux/plugins/'

# Monitor for activities
#
# If any of the other panes gets any activity we would like that to be
# displayed.
setw -g monitor-activity on
# Sane split commands
#
bind . split-window -v -c "#{pane_current_path}"
bind - split-window -h -c "#{pane_current_path}"
unbind '"'
unbind %

# Easy configuration reload
#
# Changing configuration should be easy, otherwise you may stick with bad or
# unoptimised configuration just because you didn't had time to change it. So
# it's great to have a quick command to reload the tmux configuration file
bind r source-file ~/.config/tmux/tmux.conf

# Fast pane switching
#
# Switching between panes is one of the most used commands in tmux. You should
# not need to use the prefix all the time to manage that. Let us bind Meta VIM
# keys to navigate between panes.
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Do not intercept pane switching in vim
# unbind C-w

# Fast window switching
#
# When you have multiple windows you may not always know what's inside each
# window. Switching windows with Shift + Right or Left arrow key will allow you
# to navigate between each of them quickly to glans what's in them and navigate
# to the correct one.
bind -n S-Left  previous-window
bind -n S-Right next-window
# Turn of delay for ESC key press
#
# When using Tmux together with VIM you will get annoyed when the ESC key is
# delayed. ESC key is one of the most used keys in VIM and it must be easy to
# use. So let us turn of ESC key in Tmux and allow it to pass through to VIM
# directly.
set -sg escape-time 0
# Theme
# loud or quiet?
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none
# set -g message-command-style fg=blue,bg=black
set -g message-style fg=colour232,bg=colour166,bold
# set -g pane-active-border-style bg=colour236,fg=colour51
# set -g pane-border-style bg=colour235,fg=colour238
set -g status-interval 2
set -g status-justify left
# set -g status-left '#[fg=colour0,bg=colour255,bold] [ #S ] '
set -g status-left-length 20
set -g status-position bottom
# set -g status-right '#[fg=colour233,bg=colour241,bold] %Y-%d-%m #[fg=colour0,bg=colour255,bold] %H:%M:%S '
# set -g status-right-length 50
# set -g status-style bg=colour234,fg=colour137,dim
# setw -g clock-mode-colour colour135
# setw -g mode-style fg=colour196,bg=colour238,bold
# setw -g window-status-bell-style fg=colour255,bg=colour1,bold
# setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '
# setw -g window-status-current-style fg=colour81,bg=colour238,bold
# setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '
# setw -g window-status-style fg=colour138,bg=colour235,none
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
#
# bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
# bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
# bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
# bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
#
# tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
#
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
#
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -ld

# NOTE: you can use vars with $<var> and ${<var>} as long as the str is double quoted: ""
# WARNING: hex colors can't contain capital letters

# ----------------------------=== Theme ===--------------------------
set -g @catppuccin_flavour 'macchiato'

# tmux plugins
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tassaron/tmux-df'
set -g @plugin 'catppuccin/tmux'
set -g @plugin 'akohlbecker/aw-watcher-tmux'
set -g @plugin 'tmux-plugins/tpm'

run '~/.tmux/plugins/tpm/tpm'
